# -*- coding: utf-8 -*-
"""Untitled18.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ls6Ty71Yqzq3ldq1gr8h89h3AdHbw10E
"""

import pandas as pd
import numpy as np
import nltk
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

# Load your dataset
df = pd.read_csv('spam.csv')  # Replace with the path to your dataset

# Preprocess the data
nltk.download('stopwords')
stopwords = nltk.corpus.stopwords.words('english')
df['Message'] = df['Message'].apply(lambda x: ' '.join([word for word in x.split() if word.lower() not in stopwords]))

# Convert text to features
vectorizer = CountVectorizer()
X = vectorizer.fit_transform(df['Message']).toarray()
y = df['Category'].apply(lambda x: 1 if x == 'spam' else 0).values

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=0)

# Train the model
model = MultinomialNB()
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Evaluate the model
print('Accuracy:', accuracy_score(y_test, y_pred))
print('Confusion Matrix:\n', confusion_matrix(y_test, y_pred))
print('Classification Report:\n', classification_report(y_test, y_pred))

# Predicting new emails
new_emails = ['Get your free trial now!', 'Important meeting tomorrow']
new_emails = vectorizer.transform(new_emails).toarray()
predictions = model.predict(new_emails)
print('Predictions:', predictions)